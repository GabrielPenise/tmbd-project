{"ast":null,"code":"var _jsxFileName = \"/home/gabipe/Escritorio/WorkShops p5/Indivudal Projects/TMBD/tmbd/back/tmbdproject/src/components/SoloMovie.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { useSearchContext } from \"../context/SearchContext\";\nimport { get } from \"../utils/pedidos\";\nimport CardSoloMovie from \"./CardSoloMovie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SoloMovie() {\n  _s();\n  const {\n    searchText\n  } = useSearchContext();\n  console.log(\"solomovie\", searchText);\n  const [movie, setMovie] = useState(undefined);\n  const showdataId = useLocation().pathname.split(\"/\");\n  if (showdataId[1] === \"serie\") showdataId[1] = \"tv\";\n  useEffect(() => {\n    get(`/${showdataId[1]}/${showdataId[2]}`).then(res => {\n      console.log(\"movies\", movie);\n      setMovie(res);\n    });\n  }, []);\n  if (!movie) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"solo-movie\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"solo-movie-card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(CardSoloMovie, {\n            movie: movie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-and-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"solo-movie-header-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"solo-movie-title\",\n            children: movie.original_title || movie.original_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: movie.first_air_date || movie.release_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: movie.genres.map(mov => {\n              return mov.name + \" \";\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"solo-movie-header-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"q\", {\n            className: \"qoute-solo-movie\",\n            children: movie.tagline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: movie.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            className: \"creator-solo-movie\",\n            children: movie.created_by.map((autor, i) => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: autor.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Creator\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 21\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(SoloMovie, \"qNMARBvMF6TqCsAD23Pskt07+LI=\", false, function () {\n  return [useSearchContext, useLocation];\n});\n_c = SoloMovie;\nvar _c;\n$RefreshReg$(_c, \"SoloMovie\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useSearchContext","get","CardSoloMovie","SoloMovie","searchText","console","log","movie","setMovie","undefined","showdataId","pathname","split","then","res","original_title","original_name","first_air_date","release_date","genres","map","mov","name","tagline","overview","created_by","autor","i"],"sources":["/home/gabipe/Escritorio/WorkShops p5/Indivudal Projects/TMBD/tmbd/back/tmbdproject/src/components/SoloMovie.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { useSearchContext } from \"../context/SearchContext\";\nimport { get } from \"../utils/pedidos\";\n\nimport CardSoloMovie from \"./CardSoloMovie\";\n\nexport default function SoloMovie() {\n  const { searchText } = useSearchContext();\n  console.log(\"solomovie\", searchText);\n  const [movie, setMovie] = useState(undefined);\n  const showdataId = useLocation().pathname.split(\"/\");\n  if (showdataId[1] === \"serie\") showdataId[1] = \"tv\";\n  useEffect(() => {\n    get(`/${showdataId[1]}/${showdataId[2]}`).then((res) => {\n      console.log(\"movies\", movie);\n      setMovie(res);\n    });\n  }, []);\n  if (!movie) return <div>loading..</div>;\n  return (\n    <div className=\"container\">\n      <div className=\"solo-movie\">\n        <div className=\"solo-movie-card\">\n          <div>\n            <CardSoloMovie movie={movie}></CardSoloMovie>\n          </div>\n        </div>\n        <div className=\"space-and-text\">\n          <div className=\"solo-movie-header-title\">\n            <h1 className=\"solo-movie-title\">\n              {movie.original_title || movie.original_name}\n            </h1>\n            <span>{movie.first_air_date || movie.release_date}</span>\n            <p>\n              {movie.genres.map((mov) => {\n                return mov.name + \" \";\n              })}\n            </p>\n          </div>\n          <div className=\"solo-movie-header-content\">\n            <q className=\"qoute-solo-movie\">{movie.tagline}</q>\n\n            <p>{movie.overview}</p>\n            <ol className=\"creator-solo-movie\">\n              {movie.created_by.map((autor, i) => {\n                return (\n                  <li key={i}>\n                    <p>{autor.name}</p>\n                    <p>Creator</p>\n                  </li>\n                );\n              })}\n            </ol>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}