{"ast":null,"code":"var _jsxFileName = \"/home/gabipe/Escritorio/WorkShops p5/Indivudal Projects/TMBD/tmbd/back/tmbdproject/src/components/UserProfile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useAuthContext } from \"../context/AuthContext\";\nimport { get, getUsersFavorites } from \"../utils/pedidos\";\nimport MovieGrid from \"./MovieGrid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserProfile() {\n  _s();\n  const [listMovies, setListMovies] = useState();\n  const {\n    user\n  } = useAuthContext();\n  const [isLoading, setIsLoading] = useState(false);\n  let arrFilms = [];\n  let listMovieJson = [];\n  useEffect(() => {\n    //trae los favs del usuario pasado por parametro, y los transforma en objeto json\n    getUsersFavorites(user).then(favorites => {\n      return listMovieJson = favorites.data.map(element => JSON.parse(element));\n    }).then(async userFavorites => {\n      for (let i = 0; i < userFavorites.length; i++) {\n        await get(`/${userFavorites[i].type}/${userFavorites[i].id}`).then(res => arrFilms.push(res));\n        console.log(arrFilms);\n        setIsLoading(true);\n      }\n    });\n  }, []);\n  if (!listMovies) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MovieGrid, {\n        listMovies: listMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(UserProfile, \"z5HjLbTFgnIsWnt6mL2PFTqejFM=\", false, function () {\n  return [useAuthContext];\n});\n_c = UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useEffect","useState","useAuthContext","get","getUsersFavorites","MovieGrid","UserProfile","listMovies","setListMovies","user","isLoading","setIsLoading","arrFilms","listMovieJson","then","favorites","data","map","element","JSON","parse","userFavorites","i","length","type","id","res","push","console","log"],"sources":["/home/gabipe/Escritorio/WorkShops p5/Indivudal Projects/TMBD/tmbd/back/tmbdproject/src/components/UserProfile.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useAuthContext } from \"../context/AuthContext\";\nimport { get, getUsersFavorites } from \"../utils/pedidos\";\nimport MovieGrid from \"./MovieGrid\";\n\nexport default function UserProfile() {\n  const [listMovies, setListMovies] = useState();\n  const { user } = useAuthContext();\n  const [isLoading, setIsLoading] = useState(false);\n  let arrFilms = [];\n  let listMovieJson = [];\n  useEffect(() => {\n    //trae los favs del usuario pasado por parametro, y los transforma en objeto json\n    getUsersFavorites(user)\n      .then((favorites) => {\n        return (listMovieJson = favorites.data.map((element) =>\n          JSON.parse(element)\n        ));\n      })\n      .then(async (userFavorites) => {\n        for (let i = 0; i < userFavorites.length; i++) {\n          await get(`/${userFavorites[i].type}/${userFavorites[i].id}`).then(\n            (res) => arrFilms.push(res)\n          );\n          console.log(arrFilms);\n          setIsLoading(true);\n        }\n      });\n  }, []);\n\n  if (!listMovies) return <div>Loading..</div>;\n\n  return (\n    <>\n      {!isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <div>\n          <MovieGrid listMovies={listMovies} />\n        </div>\n      )}\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,GAAG,EAAEC,iBAAiB,QAAQ,kBAAkB;AACzD,OAAOC,SAAS,MAAM,aAAa;AAAC;AAAA;AAEpC,eAAe,SAASC,WAAW,GAAG;EAAA;EACpC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,EAAE;EAC9C,MAAM;IAAEQ;EAAK,CAAC,GAAGP,cAAc,EAAE;EACjC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,IAAIW,QAAQ,GAAG,EAAE;EACjB,IAAIC,aAAa,GAAG,EAAE;EACtBb,SAAS,CAAC,MAAM;IACd;IACAI,iBAAiB,CAACK,IAAI,CAAC,CACpBK,IAAI,CAAEC,SAAS,IAAK;MACnB,OAAQF,aAAa,GAAGE,SAAS,CAACC,IAAI,CAACC,GAAG,CAAEC,OAAO,IACjDC,IAAI,CAACC,KAAK,CAACF,OAAO,CAAC,CACpB;IACH,CAAC,CAAC,CACDJ,IAAI,CAAC,MAAOO,aAAa,IAAK;MAC7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,aAAa,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;QAC7C,MAAMnB,GAAG,CAAE,IAAGkB,aAAa,CAACC,CAAC,CAAC,CAACE,IAAK,IAAGH,aAAa,CAACC,CAAC,CAAC,CAACG,EAAG,EAAC,CAAC,CAACX,IAAI,CAC/DY,GAAG,IAAKd,QAAQ,CAACe,IAAI,CAACD,GAAG,CAAC,CAC5B;QACDE,OAAO,CAACC,GAAG,CAACjB,QAAQ,CAAC;QACrBD,YAAY,CAAC,IAAI,CAAC;MACpB;IACF,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACJ,UAAU,EAAE,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAoB;EAE5C,oBACE;IAAA,UACG,CAACG,SAAS,gBACT;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB,gBAErB;MAAA,uBACE,QAAC,SAAS;QAAC,UAAU,EAAEH;MAAW;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EAExC,iBACA;AAEP;AAAC,GAtCuBD,WAAW;EAAA,QAEhBJ,cAAc;AAAA;AAAA,KAFTI,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module"}