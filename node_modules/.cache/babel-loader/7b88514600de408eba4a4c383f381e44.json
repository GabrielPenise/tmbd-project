{"ast":null,"code":"var _jsxFileName = \"/home/gabipe/Escritorio/WorkShops p5/Indivudal Projects/TMBD/tmbd/back/tmbdproject/src/components/SearchText.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useCallback } from \"react\";\nimport filmSearch from \"./filmSearch\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchText() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [pageNumber, setPageNumber] = useState(1);\n  const {\n    movies,\n    hasMore,\n    loading,\n    error\n  } = filmSearch(query, pageNumber);\n  const observer = useRef();\n  const lastMovieElement = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n  const handleSearch = e => {\n    setQuery(e.target.value);\n    setPageNumber(1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleSearch,\n      value: query\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), movies.map((movie, index) => {\n      if (movies.length === index + 1) {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          ref: lastMovieElement,\n          movie: movie\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 18\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(Card, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: loading && \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error && \"Error..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchText, \"k40WN1qZBJfzhLAn0cAccIDgiCg=\");\n_c = SearchText;\nvar _c;\n$RefreshReg$(_c, \"SearchText\");","map":{"version":3,"names":["useState","useRef","useCallback","filmSearch","Card","SearchText","query","setQuery","pageNumber","setPageNumber","movies","hasMore","loading","error","observer","lastMovieElement","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","handleSearch","e","target","value","map","movie","index","length","id"],"sources":["/home/gabipe/Escritorio/WorkShops p5/Indivudal Projects/TMBD/tmbd/back/tmbdproject/src/components/SearchText.jsx"],"sourcesContent":["import { useState, useRef, useCallback } from \"react\";\nimport filmSearch from \"./filmSearch\";\nimport Card from \"./Card\";\n\nexport default function SearchText() {\n  const [query, setQuery] = useState(\"\");\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const { movies, hasMore, loading, error } = filmSearch(query, pageNumber);\n\n  const observer = useRef();\n  const lastMovieElement = useCallback(\n    (node) => {\n      if (loading) return;\n      if (observer.current) observer.current.disconnect();\n\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting && hasMore) {\n          setPageNumber((prevPageNumber) => prevPageNumber + 1);\n        }\n      });\n      if (node) observer.current.observe(node);\n    },\n    [loading, hasMore]\n  );\n\n  const handleSearch = (e) => {\n    setQuery(e.target.value);\n    setPageNumber(1);\n  };\n  return (\n    <div>\n      <input type=\"text\" onChange={handleSearch} value={query} />\n      {movies.map((movie, index) => {\n        if (movies.length === index + 1) {\n          return <Card ref={lastMovieElement} key={movie.id} movie={movie} />;\n        }\n        return <Card key={movie.id} movie={movie} />;\n      })}\n      <div>{loading && \"Loading..\"}</div>\n      <div>{error && \"Error..\"}</div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACrD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,IAAI,MAAM,QAAQ;AAAC;AAE1B,eAAe,SAASC,UAAU,GAAG;EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAM;IAAEU,MAAM;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGV,UAAU,CAACG,KAAK,EAAEE,UAAU,CAAC;EAEzE,MAAMM,QAAQ,GAAGb,MAAM,EAAE;EACzB,MAAMc,gBAAgB,GAAGb,WAAW,CACjCc,IAAI,IAAK;IACR,IAAIJ,OAAO,EAAE;IACb,IAAIE,QAAQ,CAACG,OAAO,EAAEH,QAAQ,CAACG,OAAO,CAACC,UAAU,EAAE;IAEnDJ,QAAQ,CAACG,OAAO,GAAG,IAAIE,oBAAoB,CAAEC,OAAO,IAAK;MACvD,IAAIA,OAAO,CAAC,CAAC,CAAC,CAACC,cAAc,IAAIV,OAAO,EAAE;QACxCF,aAAa,CAAEa,cAAc,IAAKA,cAAc,GAAG,CAAC,CAAC;MACvD;IACF,CAAC,CAAC;IACF,IAAIN,IAAI,EAAEF,QAAQ,CAACG,OAAO,CAACM,OAAO,CAACP,IAAI,CAAC;EAC1C,CAAC,EACD,CAACJ,OAAO,EAAED,OAAO,CAAC,CACnB;EAED,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1BlB,QAAQ,CAACkB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACxBlB,aAAa,CAAC,CAAC,CAAC;EAClB,CAAC;EACD,oBACE;IAAA,wBACE;MAAO,IAAI,EAAC,MAAM;MAAC,QAAQ,EAAEe,YAAa;MAAC,KAAK,EAAElB;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,EAC1DI,MAAM,CAACkB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;MAC5B,IAAIpB,MAAM,CAACqB,MAAM,KAAKD,KAAK,GAAG,CAAC,EAAE;QAC/B,oBAAO,QAAC,IAAI;UAAC,GAAG,EAAEf,gBAAiB;UAAgB,KAAK,EAAEc;QAAM,GAAvBA,KAAK,CAACG,EAAE;UAAA;UAAA;UAAA;QAAA,QAAkB;MACrE;MACA,oBAAO,QAAC,IAAI;QAAgB,KAAK,EAAEH;MAAM,GAAvBA,KAAK,CAACG,EAAE;QAAA;QAAA;QAAA;MAAA,QAAkB;IAC9C,CAAC,CAAC,eACF;MAAA,UAAMpB,OAAO,IAAI;IAAW;MAAA;MAAA;MAAA;IAAA,QAAO,eACnC;MAAA,UAAMC,KAAK,IAAI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3B;AAEV;AAAC,GAvCuBR,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}