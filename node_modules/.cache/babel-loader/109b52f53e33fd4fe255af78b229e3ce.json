{"ast":null,"code":"var _jsxFileName = \"/home/gabipe/Escritorio/WorkShops p5/Indivudal Projects/TMBD/tmbd/back/tmbdproject/src/components/UserProfile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useAuthContext } from \"../context/AuthContext\";\nimport { get, getUsersFavorites } from \"../utils/pedidos\";\nimport MovieGrid from \"./MovieGrid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserProfile() {\n  _s();\n  const [listMovies, setListMovies] = useState([]);\n  const {\n    user\n  } = useAuthContext();\n  const [isLoading, setIsLoading] = useState(false);\n  let arrFilms = [];\n  let listMovieJson = [];\n  useEffect(() => {\n    //trae los favs del usuario pasado por parametro, y los transforma en objeto json\n    getUsersFavorites(user).then(favorites => {\n      favorites.data.map(element => {\n        console.log(\"esto es el map\", element);\n        const {\n          id,\n          type\n        } = JSON.parse(element);\n        get(`/${type}/${id}`).then(pelicula => {\n          setListMovies([...listMovies, pelicula]);\n        });\n      });\n    });\n    // .then(() => {\n    //   setIsLoading(true);\n    // });\n  }, []);\n\n  // if (!listMovies) return <div>Loading..</div>;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MovieGrid, {\n        listMovies: listMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(UserProfile, \"J37XZwGyivNxm/ma6TjSJAdyd3E=\", false, function () {\n  return [useAuthContext];\n});\n_c = UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useEffect","useState","useAuthContext","get","getUsersFavorites","MovieGrid","UserProfile","listMovies","setListMovies","user","isLoading","setIsLoading","arrFilms","listMovieJson","then","favorites","data","map","element","console","log","id","type","JSON","parse","pelicula"],"sources":["/home/gabipe/Escritorio/WorkShops p5/Indivudal Projects/TMBD/tmbd/back/tmbdproject/src/components/UserProfile.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useAuthContext } from \"../context/AuthContext\";\nimport { get, getUsersFavorites } from \"../utils/pedidos\";\nimport MovieGrid from \"./MovieGrid\";\n\nexport default function UserProfile() {\n  const [listMovies, setListMovies] = useState([]);\n  const { user } = useAuthContext();\n  const [isLoading, setIsLoading] = useState(false);\n  let arrFilms = [];\n  let listMovieJson = [];\n  useEffect(() => {\n    //trae los favs del usuario pasado por parametro, y los transforma en objeto json\n    getUsersFavorites(user).then((favorites) => {\n      favorites.data.map((element) => {\n        console.log(\"esto es el map\", element);\n        const { id, type } = JSON.parse(element);\n        get(`/${type}/${id}`).then((pelicula) => {\n          setListMovies([...listMovies, pelicula]);\n        });\n      });\n    });\n    // .then(() => {\n    //   setIsLoading(true);\n    // });\n  }, []);\n\n  // if (!listMovies) return <div>Loading..</div>;\n\n  return (\n    <>\n      <div>Loading...</div>\n\n      <div>\n        <MovieGrid listMovies={listMovies} />\n      </div>\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,GAAG,EAAEC,iBAAiB,QAAQ,kBAAkB;AACzD,OAAOC,SAAS,MAAM,aAAa;AAAC;AAAA;AAEpC,eAAe,SAASC,WAAW,GAAG;EAAA;EACpC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM;IAAEQ;EAAK,CAAC,GAAGP,cAAc,EAAE;EACjC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,IAAIW,QAAQ,GAAG,EAAE;EACjB,IAAIC,aAAa,GAAG,EAAE;EACtBb,SAAS,CAAC,MAAM;IACd;IACAI,iBAAiB,CAACK,IAAI,CAAC,CAACK,IAAI,CAAEC,SAAS,IAAK;MAC1CA,SAAS,CAACC,IAAI,CAACC,GAAG,CAAEC,OAAO,IAAK;QAC9BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,OAAO,CAAC;QACtC,MAAM;UAAEG,EAAE;UAAEC;QAAK,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACN,OAAO,CAAC;QACxCf,GAAG,CAAE,IAAGmB,IAAK,IAAGD,EAAG,EAAC,CAAC,CAACP,IAAI,CAAEW,QAAQ,IAAK;UACvCjB,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEkB,QAAQ,CAAC,CAAC;QAC1C,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IACF;IACA;IACA;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB,eAErB;MAAA,uBACE,QAAC,SAAS;QAAC,UAAU,EAAElB;MAAW;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACjC;EAAA,gBACL;AAEP;AAAC,GAjCuBD,WAAW;EAAA,QAEhBJ,cAAc;AAAA;AAAA,KAFTI,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module"}