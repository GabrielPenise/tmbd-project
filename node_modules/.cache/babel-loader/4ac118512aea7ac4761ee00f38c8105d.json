{"ast":null,"code":"var _jsxFileName = \"/home/gabipe/Escritorio/WorkShops p5/Indivudal Projects/TMBD/tmbd/back/tmbdproject/src/components/UserFavs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useAuthContext } from \"../context/AuthContext\";\nimport { get, getUsersFavorites } from \"../utils/pedidos\";\nimport MovieGrid from \"./MovieGrid\";\nimport { useSearchContext } from \"../context/SearchContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProfileFavs() {\n  _s();\n  const {\n    setSearchText\n  } = useSearchContext();\n  const [listMovies, setListMovies] = useState([]);\n  const {\n    user\n  } = useAuthContext();\n  const listaDeFavs = async () => {\n    //trae los favs del usuario pasado por parametro, y los transforma en objeto json\n    try {\n      const favorites = await getUsersFavorites(user);\n      const mapeoFavs = await favorites.data.map(async element => {\n        const {\n          id,\n          type\n        } = JSON.parse(element);\n        const pelicula = await get(`/${type}/${id}`);\n        return pelicula;\n      });\n      Promise.all(mapeoFavs).then(res => setListMovies(res));\n    } catch (err) {\n      console.log(\"err\", err);\n    }\n  };\n  useEffect(() => {\n    setSearchText(null);\n    listaDeFavs();\n  }, []);\n  if (!listMovies) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Peliculas Favoritas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MovieGrid, {\n        listMovies: listMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(ProfileFavs, \"YUszr3jSyzz6TBQ9Xk3yq38dwVo=\", false, function () {\n  return [useSearchContext, useAuthContext];\n});\n_c = ProfileFavs;\nvar _c;\n$RefreshReg$(_c, \"ProfileFavs\");","map":{"version":3,"names":["React","useEffect","useState","useAuthContext","get","getUsersFavorites","MovieGrid","useSearchContext","ProfileFavs","setSearchText","listMovies","setListMovies","user","listaDeFavs","favorites","mapeoFavs","data","map","element","id","type","JSON","parse","pelicula","Promise","all","then","res","err","console","log"],"sources":["/home/gabipe/Escritorio/WorkShops p5/Indivudal Projects/TMBD/tmbd/back/tmbdproject/src/components/UserFavs.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useAuthContext } from \"../context/AuthContext\";\nimport { get, getUsersFavorites } from \"../utils/pedidos\";\nimport MovieGrid from \"./MovieGrid\";\nimport { useSearchContext } from \"../context/SearchContext\";\n\nexport default function ProfileFavs() {\n  const { setSearchText } = useSearchContext();\n\n  const [listMovies, setListMovies] = useState([]);\n  const { user } = useAuthContext();\n\n  const listaDeFavs = async () => {\n    //trae los favs del usuario pasado por parametro, y los transforma en objeto json\n    try {\n      const favorites = await getUsersFavorites(user);\n\n      const mapeoFavs = await favorites.data.map(async (element) => {\n        const { id, type } = JSON.parse(element);\n        const pelicula = await get(`/${type}/${id}`);\n\n        return pelicula;\n      });\n\n      Promise.all(mapeoFavs).then((res) => setListMovies(res));\n    } catch (err) {\n      console.log(\"err\", err);\n    }\n  };\n\n  useEffect(() => {\n    setSearchText(null);\n    listaDeFavs();\n  }, []);\n\n  if (!listMovies) return <div>Loading..</div>;\n\n  return (\n    <>\n      <div>\n        <h2>Peliculas Favoritas</h2>\n        <MovieGrid listMovies={listMovies} />\n      </div>\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,GAAG,EAAEC,iBAAiB,QAAQ,kBAAkB;AACzD,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,gBAAgB,QAAQ,0BAA0B;AAAC;AAAA;AAE5D,eAAe,SAASC,WAAW,GAAG;EAAA;EACpC,MAAM;IAAEC;EAAc,CAAC,GAAGF,gBAAgB,EAAE;EAE5C,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM;IAAEU;EAAK,CAAC,GAAGT,cAAc,EAAE;EAEjC,MAAMU,WAAW,GAAG,YAAY;IAC9B;IACA,IAAI;MACF,MAAMC,SAAS,GAAG,MAAMT,iBAAiB,CAACO,IAAI,CAAC;MAE/C,MAAMG,SAAS,GAAG,MAAMD,SAAS,CAACE,IAAI,CAACC,GAAG,CAAC,MAAOC,OAAO,IAAK;QAC5D,MAAM;UAAEC,EAAE;UAAEC;QAAK,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACJ,OAAO,CAAC;QACxC,MAAMK,QAAQ,GAAG,MAAMnB,GAAG,CAAE,IAAGgB,IAAK,IAAGD,EAAG,EAAC,CAAC;QAE5C,OAAOI,QAAQ;MACjB,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAACV,SAAS,CAAC,CAACW,IAAI,CAAEC,GAAG,IAAKhB,aAAa,CAACgB,GAAG,CAAC,CAAC;IAC1D,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEF,GAAG,CAAC;IACzB;EACF,CAAC;EAED3B,SAAS,CAAC,MAAM;IACdQ,aAAa,CAAC,IAAI,CAAC;IACnBI,WAAW,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACH,UAAU,EAAE,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAoB;EAE5C,oBACE;IAAA,uBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA4B,eAC5B,QAAC,SAAS;QAAC,UAAU,EAAEA;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACjC,iBACL;AAEP;AAAC,GAvCuBF,WAAW;EAAA,QACPD,gBAAgB,EAGzBJ,cAAc;AAAA;AAAA,KAJTK,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module"}